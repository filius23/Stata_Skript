[
["dataviz.html", "4 Datenvisualisierung in Stata 4.1 Erste Entscheidungen 4.2 Grafik-Syntax in Stata 4.3 Optionen 4.4 Beispiele zum selbst anpassen 4.5 Bevölkerungspyramide 4.6 Anhang", " 4 Datenvisualisierung in Stata Wir starten wie immer mit dem Einlesen eines Datensatzes: cd &quot;...&quot; use &quot;Allbus_2018.dta&quot;, clear replace inc = . if inc &lt; 0 replace age = . if age &lt; 0 Für Grafiken gilt noch mehr als für alle anderen Aspekte in Stata: ausprobieren und sehen, was passiert! Nachdem in der Regel ja zumindest eine ungefähre Vorstellung existiert, wie die zu erstellende Grafik aussehen soll, sind Grafik-Gallerieren ein guter Startpunkt das eigene Trial &amp; Error. Die größte Herausforderung ist häufig, eine Vorstellung zu entwickeln, wie die Darstellung aussehen soll. Eine Übersicht zu allen verfügbaren Visualierungen inklusive Beispielbefehlen findet sich beispielsweise hier oder hier. 4.1 Erste Entscheidungen Wie viele Variablen sollen dargestellt werden? Die Verteilung einer Variable Die Verteilung einer Variable, aufgeteilt nach einer zweiten Variablen Die gemeinsame Verteilung zweier (oder mehrer) Variablen 4.2 Grafik-Syntax in Stata Die Syntax für Graphiken in Stata unterscheidet sich vom dem bisher Kennengelernten. 4.2.1 Aufbau Grafik-Befehle bestehen aus zwei Teilen: dem Befehl graph und der Angabe eines Grafik-Typs. Im folgenden Befehl ist box der Grafik-Typ: graph box inc 4.2.2 twoway Beim Grafik-Typ twoway muss der sog. Plottyp, spezifiziert werden. Bspw. für ein Streudiagramm mit dem Befehl scatter: graph twoway scatter inc age 4.2.3 Kombinieren von zwei twoway-Grafiken twoway-Grafiken können übereinander gelegt werden. So können wir durch Kombination der Plottypen scatter und lfit ein Streudiagram mit einer Regressionsgerade1 kombinieren: graph twoway (scatter inc age) (lfit inc age) Eine alternative Schreibweise mit || führt zur gleichen Grafik: graph twoway scatter inc age || lfit inc age 4.2.4 twoway Varianten graph twoway scatter hatten wir jetzt schon kennen gelernt. Natürlich gibt es aber auch noch weitere Darstellungsformen. graph twoway bar liefert uns ein Säulendiagramm: Mit der Option ,horizontal können wir dieses Säulendiagramm in ein Balkendiagramm mit horizontalen Balken verwandeln: Mit graph twoway connected bekommen wir ein Punktdiagramm mit verbundenen Punkten 4.2.5 Vorlagen Das Aussehen von Grafiken wird durch sog. Grafik-Schemata beeinflusst. Beispielsweise wird mit , scheme(sj) die Grafik nach den Vorlage des Stata Journals erstellt: graph twoway (scatter inc age) (lfit inc age), scheme(sj) Mit graph query, schemes wird eine Liste der verfügbaren Schemata angezeigt. Weitere Optionen bieten zB die blindschemes von Daniel Bischof oder lean2 von Svend Juul. Beide müssen zunächst mit ssc install blindschemes bzw. net install gr0002_3, from(\"http://www.stata-journal.com/software/sj4-3\") installiert werden und stehen dann zur Verfügung, zB Hier noch ein Beispiel mit plotplain aus blindschemes: graph twoway (scatter inc age) (lfit inc age), scheme(plotplain) legend(cols(2) pos(6)) …und lean2: graph twoway (scatter inc age) (lfit inc age), scheme(lean2) /// 4.3 Optionen Darüber hinaus stehen eine ganze Reihe an Anpassungsmöglichkeiten zur Verfügung 4.3.1 Beschriftungen Eine klare Beschriftung ist zentraler Bestandteil jeder Datenvisualisierung. Im wesentlichen Folgende Überschriften stehen uns dazu zur Verfügung: title(\"title\") subtitle(\"subtitle\") xtitle(\"xtitle\") ytitle(\"ytitle\") caption(\"caption\") legend pos labeln over Darstellungstypen Symbole/Linientypen Farboptionen mcolor, lcolor, graphregion(color(orange)) Optionen von graph können Unteroptionen haben oder aus einer Liste von Optionen zusammengesetzt werden. Hier zwei Beispiele: xlabel(#20, angle(90)) oder xscale(range(0 300) reverse alt). 4.3.2 Farben Obwohl es um Darstellungen geht, haben wir noch sehr wenig über Farben gesprochen. Instagram ColorBrewer colorhex 4.3.3 Subgruppen graph twoway ( scatter inc age if sex == 1 , mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter inc age if sex == 2 , mc(&quot;254 216 128&quot;) msymbol(o) ) /// graph twoway ( scatter inc age if sex == 1 , mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter inc age if sex == 2 , mc(&quot;254 216 128&quot;) msymbol(o) ) ( lfit inc age if sex == 1 , lc(&quot;black&quot;) ) ( lfit inc age if sex == 2 , lc(&quot;orange&quot;) msymbol(o) ) /// 4.4 Beispiele zum selbst anpassen Im Folgenden Was gut aussieht ist natürlich subjektiv…. 4.4.1 Boxplot Hier noch ein Beispiel mit (sehr) vielen Optionen als Vorlage für eigene Anpassungen (DoFile): graph box inc_m inc_f, over(age_c) scheme(lean1) box(1, color(&quot;0 41 93&quot;)) marker(1, mcolor(&quot;0 41 93&quot;) msymbol(&quot;o&quot;) ) medline(lcolor(&quot;204 175 105&quot;)) box(2, color(&quot;146 143 107&quot;)) marker(2, mcolor(&quot;146 143 107&quot;) msymbol(&quot;o&quot;) ) legend(cols(2) pos(12) region(fcolor(&quot;249 247 241&quot;) lcolor(&quot;16 74 138&quot;))) ytitle(&quot;{stSerif:Einkommen}{superscript:2018}&quot;) b1title(&quot;Alter&quot;) title(&quot;Einkommen&quot;) caption(&quot;{bf:Quelle}: Allbus 2018 {it:eigene Berechnungen}&quot;,position(5)) plotregion(fcolor(&quot;252 251 248&quot;)) graphregion(fcolor(&quot;249 247 241&quot;)) Auch die Darstellung auf der Startseite dieses Skripts wurde als Stata-Grafik erstellt: webuse bpwide, clear graph twoway (lfit bp_before bp_after) ( scatter bp_before bp_after if agegrp == 1, mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter bp_before bp_after if agegrp == 2, mc(&quot;0 125 186&quot;) msymbol(o) ) ( scatter bp_before bp_after if agegrp == 3, mc(&quot;214 210 196&quot;) msymbol(o) ), scheme(lean2) legend(off) xtitle(&quot;&quot;) Häufig ist die größte Herausforderung, die Daten so umzustellen, dass sie zum gewünschten graph-Befehl passen. Ein Beispiel ist die Erstellung einer Bevölkerungspyramide aus den Allbusdaten: 4.5 Bevölkerungspyramide Auch eine Bevölkerungspyramide lässt sich als Stata-Grafik erstellen. Allerdings müssen dazu einige Zwischenschritte durchlaufen, die fortgeschrittene Datenaufbereitung mit collapse voraussetzen. Außerdem könnte ein Teil der Aufbereitung mit reshape abgekürzt werden. Mehr Informationen dazu finden sich am Ende dieses Skripts in Kapitel 11. Die grundsätzliche Funktion für die Bevölkerungspyramide ist ein Balkendiagramm mit graph twoway bar , horizontal. Die Länge der Balken soll jeweils durch die Anzahl der Fälle in jeder Altersstufe, getrennt nach Geschlecht, bestimmt werden. Dazu müssen wir also zunächst die Anzahl der Befragten pro Alterstufe und Geschlecht bestimmen. Wenn wir den Allbus 2018 laden, haben wir ja einen Datensatz mit einer Zeile pro Person. Was wir jetzt aber benötigen ist eine Variante, in der wir den Datensatz sozusagen “zusammenschieben”: wir brauchen jeweils eine Zeile pro Altersstufe und Geschlecht und eine Variable mit der Zahl der Befragten. Error in a18 %&gt;% filter(age &gt; 0, sex &gt; 0) %&gt;% group_by(age, sex) %&gt;% count(name = &quot;Anzahl_Befragte&quot;) %&gt;% : konnte Funktion &quot;%&gt;%&quot; nicht finden Um dorthin zu kommen, steht uns der collapse-Befehl zur Verfügung: cd &quot;&quot; use &quot;Allbus_2018.dta&quot;, clear tab agec keep if sex &gt; 0 keep if agec &gt; 0 collapse (count) respid , by(sex age) list in 1/8 Unter respid ist jetzt die Zahl der Befragten in der jeweiligen Kombination aus age und sex abgelegt: Error in a18 %&gt;% filter(age &gt; 0, sex &gt; 0) %&gt;% group_by(age, sex) %&gt;% count(name = &quot;respid&quot;) %&gt;% : konnte Funktion &quot;%&gt;%&quot; nicht finden Um verwirrung zu vermeiden, benennen wir respid in total um: rename respid total Allerdings möchten wir jetzt die Angaben für Frauen und Männer in getrennte Variablen ablegen: gen total_m = total if sex == 1 gen total_f = total if sex == 2 list in 1/10 Error in a18 %&gt;% filter(age &gt; 0, sex &gt; 0) %&gt;% group_by(age, sex) %&gt;% count(name = &quot;total&quot;) %&gt;% : konnte Funktion &quot;%&gt;%&quot; nicht finden Jetzt können wir daraus ein Balkendiagramm erstellen: twoway( bar neg_total_m age, horizontal )(bar total_f age, horizontal) Was hier noch fehlt ist, die Umorientierung der Zahlen für die Männer “nach links”. Dazu multiplizieren wir total_m mit -1: gen neg_total_m = -total_m Damit dann verwenden wir neg_total_m für die Balken der Männer: twoway( bar neg_total_m age, horizontal )(bar total_f age, horizontal) Mit xlabel und legendnoch einige Anpassungen, außerdem können wir mit text noch Beschriftungen hinzufügen: twoway( bar neg_total_m age, horizontal )(bar total_f age, horizontal) ,xlabel( -40 &quot;40&quot; -30 &quot;30&quot; -20 &quot;20&quot; -10 &quot;10&quot; 0 10(10)40 ) legend(off) text(100 -8 &quot;Männer&quot;) text(100 8 &quot;Frauen&quot;) 4.6 Anhang 4.6.1 Aufbereitung für Boxplot cd &quot;&quot; use &quot;Allbus_2018.dta&quot;, clear replace inc = . if inc &lt; 0 replace age = . if age &lt; 0 egen age_c = cut(age), at(20,35,50,65) lab def agec1 20 &quot;20-34&quot; 35 &quot;35-49&quot; 50 &quot;50-64&quot; lab val age_c agec1 gen inc_m = inc if sex == 1 gen inc_f = inc if sex == 2 lab var inc_m &quot;Männer&quot; lab var inc_f &quot;Frauen&quot; 4.6.2 separate separate ist eine Abkürzung, um Angaben einer Variable entlang der Ausprägungen einer zweiten Variablen aufzuteilen. Das hilft uns bspw. die Aufteilung von inc nach dem Geschlecht (sex) zu vereinfachen. Wir können dies entweder mit zwei Befehlen mit gen und if durchführen oder diese zwei Schritte mit einem separate Befehl durchführen: gen inc_m = inc if sex == 1 gen inc_f = inc if sex == 2 separate inc, by(sex) list inc sex inc_m inc_f inc1 inc2 in 1/10 variable age_c not found r(111); (1,704 missing values generated) (1,773 missing values generated) storage display value variable name type format label variable label -------------------------------------------------------------------------------- inc1 int %17.0g inc inc, sex == MANN inc2 int %17.0g inc inc, sex == FRAU +-----------------------------------------------------------+ | inc sex inc_m inc_f inc1 inc2 | |-----------------------------------------------------------| |-----------------------------------------------------------| +-----------------------------------------------------------+ Was das genau ist, werden wir am Donnerstag besprechen. Für den Moment nur so viel: die Gerade gibt den Zusammenhangstrend beider Variablen wieder.↩︎ "]
]
