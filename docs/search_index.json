[
["index.html", "GESIS Methodenseminar 2020 Skript zur Stata-Übung Herzlich Willkommen!", " GESIS Methodenseminar 2020 Skript zur Stata-Übung Andreas Filser Stand: 06.08.2020 Herzlich Willkommen! Hier entsteht das Begleitskript zum GESIS Methodenseminar “Uni- und bivariate Statistik mit Stata” von und mit Sebastian Schnettler und Andreas Filser vom 14.09 bis zum 18.09.2020. Weitere Informationen zum Methodenseminar, den Link zur Anmeldung und alles weitere finden Sie hier Los geht’s mit dem Einstieg "],
["Stata1.html", "1 Einstieg in Stata 1.1 Taschenrechner 1.2 Darstellung in diesem Skript 1.3 DoFile Editor 1.4 Datensätze laden 1.5 Überblicksbefehle 1.6 Übungen", " 1 Einstieg in Stata Hier sehen wir die Startansicht von Stata: Figure 1.1: Startansicht Stata16 Die Standardansicht von Stata besteht aus mehreren Fenstern: Kommandos/Befehle Ergebnisse Variablenübersicht Übersicht zu den geladenen Daten Befehlshistorie 1.1 Taschenrechner In das Befehlsfeld (1) können wir Kommandos eingeben, z.B. eine Berechnung durchführen. Dazu geben wir zunächst den Befehl display und dann die gewünschte Rechnung ein und drücken dann Enter. Der Befehl wird dann im Ergebnisfenster gespiegelt und darunter das Ergebnis ausgegeben: Wir können display auch mit dis abkürzen. 1.2 Darstellung in diesem Skript Eingaben und Ergebnisse werden im weiteren Skript so dargestellt: display 3 + 12 15 display sqrt(9) 3 1.3 DoFile Editor Zwar funktioniert die direkte Eingabe in das Befehlsfeld, allerdings werden wir im Laufe dieser Woche sehr viel längere und komplexere Befehle kennenlernen. Für solche Anwendungen werden in Stata sog. DoFiles angelegt. Darin können Befehle entworfen und für eine spätere Verwendung abgespeichert werden. Um ein DoFile zu öffnen geben wir entweder doedit in das Befehlsfeld ein oder klicken auf das Feld “New Do-file-Editor” rechts oben: Es öffnet sich ein neues Fenster: In diesem sog. Do-File-Editor können wir Befehle entwerfen. Wenn wir diese dann durchführen möchten, markieren wir die entsprechenden Zeilen und drücken STRG + D. Die ausgeführten Befehle werden wieder im Ergebnisfenster gespiegelt und jeweils darunter die Ergebnisse angezeigt: Das DoFile können wir speichern, um es später wieder aufzurufen. Wichtig ist dabei, der gespeicherten Datei die Endung “.do” zu geben, also zum Beispiel “01_Montag.do”. Diese DoFiles können dann einfach ausgetauscht werden, um später daran weiter zu arbeiten oder Analysen für Dritte nachvollziehbar zu machen. 1.4 Datensätze laden Das ist aber alles soweit sehr unspektulär - es gibt schönere und günstigere Taschenrechner. Die eigentliche Stärke von Stata ist aber die Analyse von Datensätzen. Diese müssen zunächst eingelesen werden. Im einfachsten Fall liegen die Daten als Stata-Datensatz (mit der Endung .dta) vor und wir können die Daten wie folgt einlesen: cd &quot;C:/Users/Andreas/Dokumente/Statistik/&quot; use &quot;ZA5250_v2-0-0.dta&quot; Der Einlesevorgang besteht also aus zwei Befehlen: zuerst geben wir cd den Pfad an, unter welchem der einzulesende Datensatz zu finden ist. Natürlich hängt der Dateipfad aber ganz davon ab, wo Sie den Datensatz gespeichert haben, hier ist es “C:/Users/Andreas/Dokumente/Statistik/”: Um den Pfad des Ordners herauszufinden, klicken Sie bei Windows in die obere Adresszeile im Explorerfenster: In iOS (Mac) finden Sie den Pfad indem Sie einmal mit der rechten Maustaste auf die Datei und unter Informationen den Reiter “Ort” wählen. Wir haben zwei Möglichkeiten zu das aktuelle Arbeitsverzeichnis überprüfen: wir sehen das aktuelle Arbeitsverzeichnis im Stata-Fenster links unten oder wir geben pwd ein: Wir können diese beiden Schritte natürlich auch einfach kombinieren und den gesamten Pfad nach use angeben: use &quot;C:/Users/Andreas/Dokumente/Statistik/ZA5250_v2-0-0.dta&quot; Wenn das funktioniert hat, dann sehen wir im Fenster rechts eine Variablenübersicht: In dieser Variablenübersicht können mit Hilfe des Suchfelds (oranger Kreis) auch nach Variablen suchen: 1.5 Überblicksbefehle Mit describe, short bekommen wir einen Überblick zu den eingelesenen Daten: describe, short Contains data from D:\\oCloud\\Home-Cloud\\Lehre\\Methodenseminar\\ZA5270_v2-0-0.dta obs: 3,477 ALLBUS 2018 vars: 708 28 Mar 2019 16:09 Sorted by: Hier wurde also ein Datensatz geladen, welcher 3477 Fälle/Zeilen (obs) und 708 Variablen/Spalten (vars) enthält. (Wir können den Befehl auch als d,s abkürzen) Mit browse bekommen wir eine Übersicht des Datensatzes: browse Wenn wir nur einige Variablen betrachten möchten, hängen wir diese einfach browse an: browse eastwest german sex age mstat Wir können den describe Befehl auch nutzen, um Informationen zu einer Variable zu erhalten. Dazu hängen wir einfach eine oder mehrere Variablen an describe an: describe pv01 Running D:\\oCloud\\Home-Cloud\\Lehre\\Methodenseminar\\Stata_Skript\\profile.do . use &quot;D:\\oCloud\\Home-Cloud\\Lehre\\Methodenseminar\\ZA5270_v2-0-0.dta&quot;, clear (ALLBUS 2018) storage display value variable name type format label variable label ------------------------------------------------------------------------------- pv01 byte %12.0g pv01 BEFR.: WAHLABSICHT BUNDESTAGSWAHL Wir können dabei describe mit d abkürzen: d pv01 age sex Running D:\\oCloud\\Home-Cloud\\Lehre\\Methodenseminar\\Stata_Skript\\profile.do . use &quot;D:\\oCloud\\Home-Cloud\\Lehre\\Methodenseminar\\ZA5270_v2-0-0.dta&quot;, clear (ALLBUS 2018) storage display value variable name type format label variable label ------------------------------------------------------------------------------- pv01 byte %12.0g pv01 BEFR.: WAHLABSICHT BUNDESTAGSWAHL age byte %12.0g age ALTER: BEFRAGTE(R) sex byte %12.0g sex GESCHLECHT, BEFRAGTE(R) Wenn wir einen neuen Datensatz aus dem Speicher löschen wollen, dann können wir dies mit clear. 1.6 Übungen Führen Sie folgende (oder beliebige andere) Taschenrechneraufgaben mit Stata durch: 2 * 4 2 / 8 2 ^ sqrt(4) + 5 Laden Sie die Datensätze aus ILIAS herunter! Wechseln Sie mit Hilfe des cd Befehls das Arbeitsverzeichnis! In welchem Arbeitsverzeichnis befinden Sie sich aktuell? In welchem Ordner haben Sie die Datensätze aus ILIAS abgelegt? Navigieren Sie Stata mit cd in eben diesen Ordner, in dem die Datensätze abgelegt sind! Lesen Sie den Allbus 2018 in Stata ein. Sie finden den Allbus 2018 in ILIAS. Wie viele Fälle hat der Datensatz? Unter welchem Variablennamen ist der Familienstand der Befragten ablegt? Wie viele Variablen und wie viele Fälle enthält der Datensatz? Öffnen Sie das Überblicksfenster! Unter welchem Variablennamen ist die Information abgelegt, in welchem Bundesland die Befragten wohnen? "],
["Stata2.html", "2 Arbeiten mit Datensätzen in Stata", " 2 Arbeiten mit Datensätzen in Stata "],
["desc1.html", "3 Deskriptive Statistik", " 3 Deskriptive Statistik "],
["desc2.html", "4 Mehr deskriptive Statistik", " 4 Mehr deskriptive Statistik "],
["dataviz.html", "5 Datenvisualisierung in Stata 5.1 Grafik-Syntax in Stata 5.2 Abschließende Beispiele", " 5 Datenvisualisierung in Stata Wir starten wie immer mit dem Einlesen eines Datensatzes: use &quot;D:\\Studium\\01_Oldenburg\\Lehre\\Datensaetze\\Allbus_2018.dta&quot;, clear replace inc = . if inc &lt; 0 replace age = . if age &lt; 0 sample 25 //25% Stichprobe aus den Daten -&gt; läuft schneller Für Grafiken gilt noch mehr als für alle anderen Aspekte in Stata: ausprobieren und sehen, was passiert! Nachdem in der Regel ja zumindest eine ungefähre Vorstellung existiert, wie die zu erstellende Grafik aussehen soll, sind Grafik-Gallerieren ein guter Startpunkt das eigene Trial &amp; Error. Eine Übersicht zu allen verfügbaren Visualierungen inklusive Beispielbefehlen findet sich beispielsweise hier oder hier. 5.1 Grafik-Syntax in Stata In Anlehung an die Die Syntax für Graphiken in Stata unterscheidet sich vom dem bisher Kennengelernten. 5.1.1 Aufbau Grafik-Befehle bestehen aus zwei Teilen: dem Befehl graph und der Angabe eines Grafik-Typs. Im folgenden Befehl ist box der Grafik-Typ: graph box inc 5.1.2 twoway Beim Grafik-Typ twoway muss der sog. Plottyp, spezifiziert werden. Bspw. für ein Streudiagramm mit dem Befehl scatter: graph twoway scatter inc age 5.1.3 Kombinieren von zwei twoway-Grafiken twoway-Grafiken können übereinander gelegt werden. So können wir durch Kombination der Plottypen scatter und lfit ein Streudiagram mit einer Regressionsgerade1 kombinieren: graph twoway (scatter inc age) (lfit inc age) Eine alternative Schreibweise mit || führt zur gleichen Grafik: graph twoway scatter inc age || lfit inc age 5.1.4 Vorlagen Das Aussehen von Grafiken wird durch sog. Grafik-Schemata beeinflusst. Beispielsweise wird mit , scheme(sj) die Grafik nach den Vorlage des Stata Journals erstellt: graph twoway (scatter inc age) (lfit inc age), scheme(sj) Mit graph query, schemes wird eine Liste der verfügbaren Schemata angezeigt. Weitere Optionen bieten zB die blindschemes von Daniel Bischof oder lean2 von Svend Juul. Beide müssen zunächst mit ssc install blindschemes bzw. net install gr0002_3, from(\"http://www.stata-journal.com/software/sj4-3\") installiert werden und stehen dann zur Verfügung, zB Hier noch ein Beispiel mit plotplain aus blindschemes: graph twoway (scatter inc age) (lfit inc age), scheme(plotplain) /// …und lean2: graph twoway (scatter inc age) (lfit inc age), scheme(lean2) /// 5.1.5 Optionen Darüber hinaus kann die Grafik mit Hilfe von spezifischen Optionen angepasst werden. legend pos labeln Achsenoptionen xlabel, ylabel, xtitle over Darstellungstypen Symbole/Linientypen Farboptionen mcolor, lcolor, graphregion(color(orange)) Optionen von graph können Unteroptionen haben oder aus einer Liste von Optionen zusammengesetzt werden. Hier zwei Beispiele: xlabel(#20, angle(90)) oder xscale(range(0 300) reverse alt). 5.1.6 Farben Obwohl es um Darstellungen geht, haben wir noch sehr wenig über Farben gesprochen. Instagram ColorBrewer colorhex 5.1.7 Subgruppen graph twoway ( scatter inc age if sex == 1 , mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter inc age if sex == 2 , mc(&quot;254 216 128&quot;) msymbol(o) ) /// graph twoway ( scatter inc age if sex == 1 , mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter inc age if sex == 2 , mc(&quot;254 216 128&quot;) msymbol(o) ) ( lfit inc age if sex == 1 , lc(&quot;black&quot;) ) ( lfit inc age if sex == 2 , lc(&quot;orange&quot;) msymbol(o) ) /// 5.2 Abschließende Beispiele webuse bpwide, clear graph box bp_before bp_after, over(agegrp) box(1, color(&quot;0 0 128&quot;)) scheme(lean2) ytitle(&quot;{stSerif:Blutdruck}{superscript:XX}&quot;) title(&quot;Blutdruckdaten ({it:fiktiv})&quot;) caption(&quot;{bf:Quelle}: Stata-Daten {it:bpwide}, ein fiktives Beispiel&quot;) Auch die Darstellung auf der Startseite dieses Skripts wurde mit als Stata-Grafik erstellt: graph twoway (lfit bp_before bp_after) ( scatter bp_before bp_after if agegrp == 1, mc(&quot;0 62 81&quot;) msymbol(o) ) ( scatter bp_before bp_after if agegrp == 2, mc(&quot;0 125 186&quot;) msymbol(o) ) ( scatter bp_before bp_after if agegrp == 3, mc(&quot;214 210 196&quot;) msymbol(o) ), scheme(lean2) legend(off) xtitle(&quot;&quot;) Was das genau ist, werden wir am Donnerstag besprechen. Für den Moment nur so viel: die Gerade gibt den Zusammenhangstrend beider Variablen wieder.↩︎ "],
["bevölkerungspyramide.html", "6 Bevölkerungspyramide", " 6 Bevölkerungspyramide "],
["abschließende-bemerkungen.html", "7 Abschließende Bemerkungen", " 7 Abschließende Bemerkungen Häufig ist die größte Herausforderung, die Daten so umzustellen, dass sie zum gewünschten graph-Befehl passen. "],
["lin-reg.html", "8 Regression", " 8 Regression "],
["inf1.html", "9 Inferenzstatistik I", " 9 Inferenzstatistik I "],
["inf2.html", "10 Inferenzstatistik II", " 10 Inferenzstatistik II "],
["hypo.html", "11 Hypothesentests", " 11 Hypothesentests "],
["export1.html", "12 Ergebnisexport &amp; weitere Tipps", " 12 Ergebnisexport &amp; weitere Tipps "]
]
