[
["dataviz.html", "4 Datenvisualisierung in Stata 4.1 Visualisierung einer Variable 4.2 Verteilungen vergleichen mit Facetten 4.3 Gemeinsame Verteilung zweier Variablen 4.4 Weitere twoway Grafiken 4.5 Kombinieren von zwei twoway-Grafiken 4.6 Gruppierte Boxplots 4.7 Übungen 4 4.8 Optionen 4.9 Anhang &amp; Beispiele zum selbst anpassen", " 4 Datenvisualisierung in Stata Wir starten wie immer mit dem Einlesen eines Datensatzes: cd &quot;...&quot; use &quot;Allbus_2018.dta&quot;, clear replace inc = . if inc &lt; 0 replace educ = . if educ &lt; 0 replace age = . if age &lt; 0 Für Grafiken gilt noch mehr als für alle anderen Aspekte in Stata: ausprobieren und sehen, was passiert! Nachdem in der Regel ja zumindest eine ungefähre Vorstellung existiert, wie die zu erstellende Grafik aussehen soll, sind Grafik-Gallerien ein guter Startpunkt das eigene Trial &amp; Error. Die größte Herausforderung ist häufig, eine Vorstellung zu entwickeln, wie die Darstellung aussehen soll. Daher im Folgenden einige Beispiele für verschiedene Anwendungsfälle. Diese lassen sich ganz grob entlang zweier Fragen einteilen: Soll eine oder mehrere Variablen dargestellt werden? Was ist das Skalenniveau der darzustellenden Variable(n)? Grundsätzlich bestehen Grafik-Befehle aus zwei Teilen: dem Befehl graph und der Angabe eines Grafik-Typs. 4.1 Visualisierung einer Variable 4.1.1 metrische Variablen Die Verteilung metrischer Variablen (wie z.B. die Einkommensangaben in inc) können als Boxplot, Histogramm oder kdensity dargestellt werden. Während Histogramme und K-Density-Plots die Häufigkeit von Ausprägungen innerhalb von Wertebereichen zeigen, fassen Boxplots die Lagemaße zu einer Darstellung zusammen - mehr dazu hier hier. graph box inc histogram inc kdensity inc 4.1.2 Kategoriale Variablen Die Darstellung einer kategorialen Variable ist häufig eine grafische Übersetzung einer Häufigkeitsauszählung. Insbesondere bieten sich dafür Säulen- und Balkendiagramme an. Beispielsweise könnten wir die Schulabschlüsse der Befragen auszählen. Dazu zählen1 wir die respids pro Ausprägung von educ2, mit graph bar bzw graph bar, horizontal bekommen wir dann ein Säulen- bw. Balkendiagramm. graph bar (count) respid, over(educ) graph bar (count) respid, over(educ) horizontal 4.2 Verteilungen vergleichen mit Facetten In der Regel wollen wir aber Verteilungen vergleichen, wie wir das auch schon in Kapitel 3 mit Hilfe von Tabellen und Kennzahlen getan haben. Hier hilft die Option by weiter. Wir hängen an die Befehle von oben einfach ,by (sex) an, um getrennte Darstellungen für Männer und Frauen zu bekommen: graph box inc, by(sex) histogram inc, by(sex) twoway (kdensity inc), by(sex) // zur Bedeutung von twoway gleich mehr Das funktioniert auch für die Säulen- und Balkendiagramme: graph bar (count) respid, over(educ) by(sex) graph bar (count) respid, over(educ) by(sex) horizontal Übung1 4.3 Gemeinsame Verteilung zweier Variablen 4.3.1 Mosaikplot Für die gemeinsame Verteilung zweiter kategorialer Merkmale empfiehlt sich ein Mosaikplot. Dafür gibt es aber keinen Standardbefehl in Stata, sondern wir müssen den Befehl spineplot erst installieren: ssc install spineplot // Befehl installieren (nur 1x nötig) spineplot educ agec Ein Mosaikplot stellt die bedingen Häufigkeiten dar: die Breite der Säulen wird durch die Größe der Altersgruppen bestimmt. Die Anzahl der Befragten aus den jeweiligen Kategorien von educ bestimmen dann jeweils die Farbanteile innerhalb der Säulen. 4.3.2 Streudiagramm Eine sehr weit verbreitete Darstellung für zwei metrische Variablen ist das sog. Streudiagramm (“scatter plot”), dieses bekommen wir mit twoway scatter. Bspw. können wir die gemeinsame Verteilung des Alters und des Einkommens der Befragten so darstellen: graph twoway scatter inc age 4.4 Weitere twoway Grafiken Eben kam bereits der Befehl twoway vor. twoway stellt eine ganze Reihe an Darstellungen zur Auswahl, die wir hier nicht besprochen haben. Eine Übersicht zu allen verfügbaren Visualierungen inklusive Beispielbefehlen findet sich beispielsweise hier oder hier. 4.5 Kombinieren von zwei twoway-Grafiken Eine besonders hilfreiche Funktion ist das Übereinanderlegen mehrer twoway Grafiken. Dazu hängen wir die Befehle mit (scatter ...) (scatter ...) einfach aneinander. Mit dieser Strategie können wir zwei nach Geschlechtern getrennte Streudiagramme aufeinander legen und so die Punkte farblich unterscheidbar machen: graph twoway (scatter inc age if sex==1) (scatter inc age if sex==2) Hier haben wir also jetzt blaue Punkte für sex == 1 und rote Punkte für sex == 2. Leider sagt uns die Legende aber überhaupt nichts dazu. Dazu kommen wir gleich. 4.6 Gruppierte Boxplots Auf ähnliche Weise können wir auch Boxplots nebeneinander legen. Auch hier geben wir nach dem Grafikkommando graph box die Subgruppen für die jeweiligen Variablen an. Allerdings funktioniert das hier leider nicht direkt mit if. Wir müssen stattdessen einen Zwischenschritt gehen und separate Variablen für jede Untergruppe erstellen.3 gen inc1 = inc if educ == 1 gen inc2 = inc if educ == 2 gen inc3 = inc if educ == 3 gen inc4 = inc if educ == 4 gen inc5 = inc if educ == 5 graph box inc1 inc2 inc3 inc4 inc5 Das hat den Vorteil, dass wir dann gruppierte Boxplots nach Geschlecht erstellen können, wenn wir zusätzlich ,by(sex) anhängen: graph box inc1 inc2 inc3 inc4 inc5, by(sex) Übung2 4.7 Übungen 4 4.7.1 Übung 4-1 Laden Sie den kumulierten Allbusdatensatz (Allbus_1980-2018.dta) in Stata und wählen Sie die Befragten aus dem Jahr 2014 aus! Erstellen Sie einen Boxplot, ein Histogramm und einen k-Density-Plot für den BMI der Befragten (hs18). Vergessen Sie nicht, die Missings mit mvdecode zu überschreiben oder mit keep/drop auszuschließen. Überprüfen Sie z.B. mit summary, ob alle negativen Werte ausgeschlossen wurden. Erstellen Sie eine weitere Variante dieser Grafiken, welche die Verteilung des BMIs jeweils nach Geschlecht zeigen. Erstellen Sie ebenfalls für die Befragten aus dem Jahr 2014 eine Grafik, welche die Häufigkeit der Befragten aus den alten und neuen Bundesländern (eastwest) wiedergibt! Erstellen Sie sowohl ein Säulen- als auch ein Balkendiagramm! Erstellen Sie eine weitere Darstellung, welche zusätzlich nach dem Geschlecht unterscheidet! Zurück zu univariate Grafiken 4.7.2 Übung 4-2 Laden Sie den kumulierten Allbusdatensatz (Allbus_1980-2018.dta) erneut und wählen Sie die Befragten aus dem Jahr 2016 aus! Erstellen Sie einen Mosaikplot, welcher die Bildung der Befragten (educ) sowie deren Kontakte zu Ausländern bei der Arbeit (mc02) abbildet. Vergessen Sie nicht, die Missings mit mvdecode zu überschreiben oder mit keep/drop auszuschließen. Überprüfen Sie z.B. mit table, ob alle negativen Werte ausgeschlossen wurden. Betrachten Sie die Darstellung: welche Merkmalskombination aus educ und mc02 ist die häufigste? Überprüfen Sie ihre Einschätzung mit Hilfe einer Kontingenztabelle (tab educ mc02) Erstellen Sie einen Scatterplot für das Alter age und xt11, die Bearbeitungsdauer des Politikquiz. Erstellen Sie den Scatterplot so, dass die Befragte aus Ost und West durch unterschiedliche Farben markert sind - so wie es hier gemacht wurde! Laden Sie den Allbus 2018 (Allbus_2018.dta) und erstellen Sie einen Boxplot zur Bearbeitungsdauer des Politikquiz! Erstellen Sie einen gruppierte Darstellung, je nachdem ob die Befragten aus den alten und neuen Bundesländern (eastwest) kommen! Splitten Sie diese Darstellung zusätzlich nach dem Geschlecht der Befragten auf! Zurück zu bivariaten Grafiken 4.7.3 Weitere Übungen Kap4 Wählen Sie eine der oben erstellten Grafiken aus und verändern Sie den Titel, Untertitel und Achsenbeschriftung, siehe hier. Verändern Sie die Form/Farben der Punkte, Balken oder Box! Siehe hier und hier Verändern Sie die Legende des Scatterplots aus Aufgabe 4 - siehe hier Erstellen Sie eine Alterspyramide für ein Jahr aus dem kumulierten Allbus! Laden Sie dafür den kumulierten Allbus und wählen ein Jahr aus (tab year zeigt Ihnen, welche Auswahl sie haben). Vollziehen Sie dann die hier gezeigten Schritte nach! Passen Sie Farben, Schrift usw. nach Ihren Vorstellungen an! Sie können anstatt der Altersgruppen auch bspw. die Bildungsgruppen educ oder Wohnortgröße gkpol verwenden! 4.8 Optionen Diese grundlegenden Darstellungen können mit Hilfe einer ganzen Reihe an Optionen angepasst werden. Auch hier beschränken wir uns auf die wesentlichsten Optionen. Bei konkreten Fragen hilft oftmals auch eine Google-Suche nach: “stata graph text smaller” o.ä. 4.8.1 Titel Eine klare Beschriftung ist zentraler Bestandteil jeder Datenvisualisierung. Folgende Überschriften stehen uns dazu zur Verfügung: graph ...., title(&quot;Titel&quot;) subtitle(&quot;Untertitel&quot;) xtitle(&quot;x-Achsentitel&quot;) ytitle(&quot;y-Achsentitel&quot;) caption(&quot;Bildunterschrift&quot;) Weitere Optionen unter help title_options. 4.8.2 Achsenbeschriftung Außerdem können wir die Achsenbeschriftungen verändern - hier ein Beispiel für die x-Achse4 xscale(range(0 100)) \\(\\rightarrow\\) x-Achse auf 0-100 ausdehnen xtick(0 (10) 100 ) \\(\\rightarrow\\) an allen Zehner-Grenzen zwischen 0 und 100, 0(10)100 ist die Abkürzung für 0,10,20,30,40,50,60,70,80,90,100 xlabel(0 \"Null\" 10 \"zehn\" 20 (10) 100) \\(\\rightarrow\\) Beschriftung der “ticks” graph .... , xscale(range(0 100)) xtick(0 (10) 100 )` xlabel(0 &quot;Null&quot; 10 &quot;zehn&quot; 20 (10) 100) Mehr Optionen finden sich unter help axis_label_options. Bspw. kann man mit xlabel(..., alternate) die Achsenlabels nach oben und unten verschieben. 4.8.3 Text einfügen Wir können mit text() auch ein Text auf der Grafik positionieren - wie geben erst die y-Koordinate, dann die x-Koordinate an und dann den gewünschten Text: graph twoway scatter inc age, text(17500 80 &quot;text&quot;) 4.8.4 Schriftart &amp; Textgröße Eine Reihe an Schriftarten stehen für Textangaben zur Verfügung: graph twoway scatter inc age, /// title(&quot;{stSerif:Einkommen {bf:fett} {it:kursiv}}&quot;) /// subtitle(&quot;Text{superscript:hochgestellt}{subscript:tiefgestellt}&quot;) /// xtitle(&quot;Alter {it:age}&quot;) ytitle(&quot;{stMono:Einkommen}&quot;) /// xlabel(0 &quot; {stMono:Null}&quot; 10 &quot;{bf:zehn}&quot; 20 (10) 100) /// text(15000 20 &quot;Hier ein Symbol: {&amp;Omega}&quot;) xscale(range(0 100)) Mehr dazu unter help graph_text Außerdem können wir mit der Option size die jeweilige Größe des Textes anpassen, dabei können wir die Größenangaben aus @ref(Grafik Optionen) verwenden. Mit der Option angle(90) können wir außerdem den Text um 90 Grad (und natürlich um jeden beliebigen Wert durch entsprechende Angabe): graph twoway scatter inc age, /// title(&quot;Text1&quot;, size(vsmall)) /// subtitle(&quot;Untertitel&quot;,size(large)) /// xtitle(&quot;Alter&quot;,size(small)) ytitle(&quot;{stMono:Einkommen}&quot;,size(vhuge)) /// xlabel(0 &quot; {stMono:Null}&quot; 10 &quot;{bf:zehn}&quot; 20 (10) 100 , labsize(tiny) angle(90)) Wenn die Option over verwendet wird, dann müssen die Textoptionen in over angegeben werden: graph bar (count) respid, /// over(gkpol,label(labsize(small) angle(90))) 4.8.5 Legende Oben hatten wir gesehen, dass die automatische Legende nicht unbedingt aussagekräftig ist. Mit der Option legend können wir die Legende beschriften und einen Titel vergeben: graph twoway (scatter inc age if sex==1) (scatter inc age if sex==2), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;) title(&quot;Geschlecht&quot;)) Mit der Option pos können wir außerdem die Position der Legende anpassen - wir geben dabei eine Zahl zwischen 0 und 12 an. Die Werte 1-12 entsprechen die Stunden auf einer Uhr, 0 setzt die Legende in die Mitte der Grafik. graph twoway (scatter inc age if sex==1) (scatter inc age if sex==2), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;) title(&quot;Geschlecht&quot;) pos(9)) Weitere Optionen und Beispiele unter help legend_options. Mit legend(off) kann die Legende auch ausgeblendet werden. 4.8.6 Marker Im Stata-Jargon werden die Punkte “marker” genannt. Deren Aussehen können wir mit entsprechenden Optionen ebenfalls verändern. Zum einen können wir mit msymbol die Form des Markers verändern, mit msize können wir die Größe und mit mcolor die Farbe anpassen: graph twoway scatter inc age, msymbol(D) msize(small) mcolor(sand) Dabei können wir aus einer Reihe an Formen, Größen und Farben wählen: (#fig:msymbol_size_overview)Marker Optionen In unserem Beispiel vorhin hatten wir die Farben der marker aber genutzt, um die Angaben für Männer und Frauen zu unterscheiden. Hier geben wir dann mcolor etc. jeweils innerhalb der Klammern an: graph twoway /// (scatter inc age if sex==1, mcolor(orange) msize(small)) /// (scatter inc age if sex==2, mcolor(sand) msymbol(D) msize(small)), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;)) Mit mlcolor und mlwidth können wir jedem marker die Farbe und Dicke5 der Umrandung angeben: graph twoway /// (scatter inc age if sex==1, mcolor(orange) msize(small) mlcolor(gs3) mlwidth(vthin)) /// (scatter inc age if sex==2, mcolor(sand) msymbol(D) msize(small) mlcolor(gs3) mlwidth(vvthin)), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;)) 4.8.7 Farben Obwohl es um Darstellungen geht, haben wir noch sehr wenig über Farben gesprochen. Neben den oben gezeigten vordefinierten Farben können wir auch Farben als RGB-Codes6 angeben und so Farben eigenen Paletten verwenden: graph twoway /// (scatter inc age if sex==1, mcolor(&quot;91 37 97&quot;) msize(small)) /// (scatter inc age if sex==2, mcolor(&quot;150 196 134&quot;) msymbol(D)), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;)) Außerdem können wir mit plotregion(fcolor( )) und graphregion(fcolor( )) die Hintergrundfarben der Grafik und des Koordinatenbereichs anpassen. Mit region(fcolor( )) können wir die den Hintergrund der Legende verändern. graph twoway /// (scatter inc age if sex==1, mcolor(&quot;91 37 97&quot;) msize(small)) /// (scatter inc age if sex==2, mcolor(&quot;150 196 134&quot;) msymbol(D)), /// legend(lab(1 &quot;Männer&quot;) lab(2 &quot;Frauen&quot;) region(fcolor(red))) /// plotregion(fcolor(eltblue)) graphregion(fcolor(olive_teal)) Farbpaletten sind ein Thema für sich und was gut aussieht ist natürlich subjektiv…. (das letzte Beispiel wohl eher nicht). Allerdings gibt es einige Leitlinien, siehe hier. Es gibt zahlreiche Möglichkeiten selbst zu erstellen: zB. mit Adobe Color oder Paletton. Außerdem gibt es unzählige Quellen für Farbpaletten: Instagram oder ColorBrewer 4.8.7.1 Boxplots anpassen Die Farben in Boxplots können wir mit box anpassen - bei mehreren Boxen geben wir zuerst eine Zahl an, auf welche Box sich die Optionen beziehen sollen. Die Ausreißer können wir mit marker berarbeiten: graph box inc1 inc2 , /// box(1, color(&quot;orange&quot;) blcolor(black)) marker(1, mcolor(&quot;purple&quot;) msymbol(&quot;Dh&quot;) ) /// box(2, color(&quot;159 97 184&quot;) blcolor(navy)) marker(2, mcolor(&quot;gs45&quot;) msymbol(&quot;Sh&quot;) ) 4.8.7.2 Balken/Säulendigramme anpassen Für Balkendiagramme ist bar() die richtige Option. Mit fcolor können wir die Flächenfarbe anpassen, mit color die Umrandung. graph bar (count) respid, over(eastwest) bar(1,fcolor(orange) color(gs4)) Leider ist die unterschiedliche Einfärbung von Balken etwas komplizierter, hierzu müssen wir erst mit collapse den Datensatz umformen. Siehe hier. 4.8.8 Vorlagen Eine Alternative ist auf Grafik-Schemata zuzückzugreifen. Beispielsweise wird mit , scheme(sj) die Grafik nach den Vorlage des Stata Journals erstellt: graph twoway scatter inc age , scheme(sj) Mit graph query, schemes wird eine Liste der verfügbaren Schemata angezeigt. Weitere Optionen bieten zB die blindschemes von Daniel Bischof. Diese müssen zunächst mit ssc install blindschemes installiert werden und stehen dann zur Verfügung, zB Hier noch ein Beispiel mit plotplain aus blindschemes: ssc install blindschemes graph twoway scatter inc age, scheme(plotplain) 4.9 Anhang &amp; Beispiele zum selbst anpassen Im Folgenden finden sich nun einige Beispiele mit (sehr) vielen Optionen als Vorlage für eigene Anpassungen. Trial &amp; error wärmstens empfohlen! 4.9.1 Boxplot Wie oben gezeigt, muss für gruppierte Boxplots (hier nach Geschlecht) muss die dargestellte Variable zunächst aufgesplittet werden: cd &quot;&quot; use &quot;Allbus_2018.dta&quot;, clear replace inc = . if inc &lt; 0 replace age = . if age &lt; 0 egen age_c = cut(age), at(20,35,50,65) // Alter in Gruppen lab def agec1 20 &quot;20-34&quot; 35 &quot;35-49&quot; 50 &quot;50-64&quot; // Gruppen labeln lab val age_c agec1 // Einkommen in Männer und Frauen splitten: gen inc_m = inc if sex == 1 gen inc_f = inc if sex == 2 lab var inc_m &quot;Männer&quot; lab var inc_f &quot;Frauen&quot; graph box inc inc_f, over(age_c) /// scheme(lean1) /// box(1, color(&quot;0 41 93&quot;)) marker(1, mcolor(&quot;0 41 93&quot;) msymbol(&quot;o&quot;) ) medline(lcolor(&quot;204 175 105&quot;)) /// optionen box1 box(2, color(&quot;146 143 107&quot;)) marker(2, mcolor(&quot;146 143 107&quot;) msymbol(&quot;o&quot;) ) /// box2 anpassen legend(cols(2) pos(12) region(fcolor(&quot;249 247 241&quot;) lcolor(&quot;16 74 138&quot;))) /// Legende ytitle(&quot;{stSerif:Einkommen}{superscript:2018}&quot;) b1title(&quot;Alter&quot;) /// Achsenbeschriftung title(&quot;Einkommen&quot;) caption(&quot;{bf:Quelle}: Allbus 2018 {it:eigene Berechnungen}&quot;,position(5)) /// titel usw. plotregion(fcolor(&quot;252 251 248&quot;)) graphregion(fcolor(&quot;249 247 241&quot;)) // Hintergrundfarben 4.9.2 Scatterplot Hier ein angepasster Scatterplot, welcher aus drei überlagerten scatter besteht: webuse bpwide, clear graph twoway /// ( scatter bp_before bp_after if agegrp == 1, mc(&quot;0 62 81&quot;) msymbol(o) ) /// Altersgruppe 1 -&gt; dunkle Punkte ( scatter bp_before bp_after if agegrp == 2, mc(&quot;0 125 186&quot;) msymbol(d) ) /// Altersgruppe 2 -&gt; blaue Rhomben ( scatter bp_before bp_after if agegrp == 3, mc(&quot;214 210 196&quot;) msymbol(s) ) /// Altersgruppe 3 -&gt; Vierecke , scheme(lean2) /// Schema legend(lab(1 &quot;30-45&quot;) lab(2 &quot;{stMono:46-59}&quot;) lab(3 &quot;60+&quot;) lcolor(&quot;16 74 138&quot;) region(fcolor(&quot;249 247 241&quot;) lcolor(&quot;16 74 138&quot;)) pos(6) cols(3) ) /// legende -&gt; 3 Spalten xtitle(&quot;{stSerif:Blutdruck nachher}&quot;) ytitle(&quot;{stMono:Blutdruck vorher}&quot;) /// Achsenbeschriftung text(185 172 &quot;Ein Text&quot; &quot;über {stSerif: 2} Zeilen&quot;) title(&quot;{&amp;Delta}p={stSerif:R}*V&quot;) // Textfeld einfügen 4.9.3 Bevölkerungspyramide Häufig ist die größte Herausforderung, die Daten so umzustellen, dass sie zum gewünschten graph-Befehl passen. Ein Beispiel ist die Erstellung einer Bevölkerungspyramide aus den Allbusdaten: Auch diese Bevölkerungspyramide lässt sich als Stata-Grafik erstellen. Allerdings müssen dazu einige Zwischenschritte durchlaufen, die fortgeschrittene Datenaufbereitung mit collapse voraussetzen. Außerdem könnte ein Teil der Aufbereitung mit separate abgekürzt werden. Mehr Informationen dazu finden sich am Ende dieses Skripts in Kapitel 11. Die grundsätzliche Funktion für die Bevölkerungspyramide ist ein Balkendiagramm mit graph twoway bar , horizontal. Die Länge der Balken soll jeweils durch die Anzahl der Fälle in jeder Altersstufe, getrennt nach Geschlecht, bestimmt werden. Dazu müssen wir also zunächst die Anzahl der Befragten pro Alterstufe und Geschlecht bestimmen. Wenn wir den Allbus 2018 laden, haben wir ja einen Datensatz mit einer Zeile pro Person. Was wir jetzt aber benötigen ist eine Variante, in der wir den Datensatz sozusagen “zusammenschieben”: wir brauchen jeweils eine Zeile pro Altersstufe und Geschlecht und eine Variable mit der Zahl der Befragten. age sex Anzahl_Befragte 1 18 1 15 2 18 2 11 3 19 1 22 4 19 2 15 5 20 1 18 6 20 2 16 Um dorthin zu kommen, steht uns der collapse-Befehl zur Verfügung: cd &quot;&quot; use &quot;Allbus_2018.dta&quot;, clear tab agec keep if sex &gt; 0 keep if agec &gt; 0 collapse (count) respid , by(sex age) list in 1/8 Unter respid ist jetzt die Zahl der Befragten in der jeweiligen Kombination aus age und sex abgelegt: age sex respid 1 18 1 15 2 18 2 11 3 19 1 22 4 19 2 15 5 20 1 18 6 20 2 16 7 21 1 21 8 21 2 13 Um verwirrung zu vermeiden, benennen wir respid in total um: rename respid Anzahl_Befragte Allerdings möchten wir jetzt die Angaben für Frauen und Männer in getrennte Variablen ablegen.7 gen total_m = Anzahl_Befragte if sex == 1 gen total_f = Anzahl_Befragte if sex == 2 list in 1/10 age sex total total_m total_f 1 18 1 15 15 . 2 18 2 11 . 11 3 19 1 22 22 . 4 19 2 15 . 15 5 20 1 18 18 . 6 20 2 16 . 16 7 21 1 21 21 . 8 21 2 13 . 13 9 22 1 18 18 . 10 22 2 15 . 15 Jetzt können wir daraus ein Balkendiagramm erstellen, wobei wir zwei twoway kombinieren - wie schon beim Scatterplot: twoway( bar total_m age, horizontal )(bar total_f age, horizontal) Was hier noch fehlt ist, die Umorientierung der Zahlen für die Männer “nach links”. Dazu multiplizieren wir total_m mit -1: gen neg_total_m = -total_m Damit dann verwenden wir neg_total_m für die Balken der Männer: twoway( bar neg_total_m age, horizontal )(bar total_f age, horizontal) Mit xlabel und legendnoch einige Anpassungen, außerdem können wir mit text noch Beschriftungen hinzufügen: twoway( bar neg_total_m age, horizontal )(bar total_f age, horizontal) ,xlabel( -40 &quot;40&quot; -30 &quot;30&quot; -20 &quot;20&quot; -10 &quot;10&quot; 0 10(10)40 ) legend(off) text(100 -8 &quot;Männer&quot;) text(100 8 &quot;Frauen&quot;) Anpassung der Farbe, des Schemas, …: twoway /// (bar neg_total_m age, horizontal fcolor(&quot;60 117 153&quot;)) /// (bar total_f age, horizontal fcolor(&quot;201 255 247&quot;)) , /// xlabel( -40 &quot;40&quot; -30 &quot;30&quot; -20 &quot;20&quot; -10 &quot;10&quot; 0 10(10)40 ) /// legend(off) text(100 -8 &quot;Männer&quot;) text(100 8 &quot;Frauen&quot;) /// xscale(range(0 50)) xtick(-50 (10) 50 ) /// scheme(plotplain) xtitle(&quot;{stSerif: Anzahl Befragte}&quot;) ytitle(&quot;{stSerif: Alter Befragte(r)}&quot;) 4.9.4 Boxplot Definition der Bestandteile eines Boxplots: ggf. Ausreißer unterer Whisker: q1 - 1.5* IQR untere Grenze: 1. Quartil mittlere Linie: Median obere Grenze: 3. Quartil oberer Whisker: q3 + 1.5* IQR ggf. Ausreißer Die Box enthält also die zentralen 50% des Wertebereichs. Daher die Angabe (count).↩︎ over(educ) legt dabei fest, dass innerhalb der Kategorien von educ gezählt werden soll.↩︎ Das geht auch schneller mit separate - siehe Kapitel 11.6↩︎ für die y-Achse funktionert das genauso, lediglich mit yticks usw.↩︎ Zur Auswahl stehen: vthin,thin,medthin,medium,medthick,thick,vthick,vvthick,vvvthick↩︎ RGB steht dabei als Abkürzung für die Anteile der Grundfarben Rot, Grün und Blau an der Mischfarbe.↩︎ Eine Abkürzung für diesen Schritt mit Hilfe von separate findet sich in Kapitel 11↩︎ "]
]
